{"version":3,"sources":["pomodoro.png","Clock.js","Timers.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","state","dispatch","className","id","clockTime","toString","length","role","aria-label","Button","onClick","type","ticToc","console","log","started","clearInterval","setInterval","StartStop","icon","faPlay","faPause","faRedoAlt","Timers","sessionTime","faCaretDown","size","faCaretUp","breakTime","reducer","action","test","Error","App","useReducer","src","pomodoro","alt","Start","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ceb06d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pomodoro.7ffd2e73.png\";","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst StartStop = (state, dispatch) => {\n  var ticToc;\n  console.log(`the counter started? ${state.started}`);\n  if (!state.started) {\n    ticToc = setInterval(() => {\n      console.log(`the counter started? ${state.started}`);\n      dispatch({ type: \"tic-toc\" });\n    }, 1000);\n  } else {\n    clearInterval(ticToc);\n  }\n};\n\nfunction Clock({ state, dispatch }) {\n  return (\n    <div>\n      <div className=\"jumbotron text-center mt-2 py-3\">\n        <h1 className=\"display-2\" id=\"time-left\">\n          {state.clockTime[0]}:\n          {state.clockTime[1].toString().length === 1\n            ? `0${state.clockTime[1]}`\n            : state.clockTime[1]}\n        </h1>\n        <div className=\"lead alert badge-primary display-4\" id=\"timer-label\">\n          <strong>Work Hard!</strong>\n        </div>\n        <hr className=\"my-3\" />\n        <div\n          className=\"btn-group mt-2 lead\"\n          role=\"group\"\n          aria-label=\"Play/Pause Reset\"\n        >\n          <Button\n            className=\"btn btn-dark btn-lg\"\n            id=\"start_stop\"\n            role=\"button\"\n            onClick={() => {\n              dispatch({ type: \"start-stop\" });\n              StartStop(state, dispatch);\n            }}\n          >\n            <FontAwesomeIcon icon={faPlay} /> <FontAwesomeIcon icon={faPause} />\n          </Button>{\" \"}\n          <Button\n            className=\"btn btn-secondary btn-lg\"\n            id=\"reset\"\n            role=\"button\"\n            onClick={() => dispatch({ type: \"reset\" })}\n          >\n            <FontAwesomeIcon icon={faRedoAlt} />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretUp, faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Timers({ state, dispatch }) {\n  return (\n    <>\n      <div className=\"d-flex flex-row justify-content-center\">\n        <div id=\"session-block\" className=\"p-2 text-center\">\n          <div id=\"session-label\" className=\"alert alert-primary\" role=\"alert\">\n            <div>Session:</div>\n            <div className=\"lead\">\n              <div className=\"badge badge-primary\">\n                <span id=\"session-length\">{state.sessionTime}</span> min\n              </div>\n            </div>\n            <div\n              className=\"btn-group mt-2\"\n              role=\"group\"\n              aria-label=\"set session length\"\n            >\n              <Button\n                id=\"session-decrement\"\n                className=\"btn btn-primary\"\n                onClick={() => dispatch({ type: \"session-decrement\" })}\n              >\n                <FontAwesomeIcon icon={faCaretDown} size=\"2x\" />\n              </Button>\n              <Button\n                id=\"session-increment\"\n                className=\"btn btn-primary\"\n                onClick={() => dispatch({ type: \"session-increment\" })}\n              >\n                <FontAwesomeIcon icon={faCaretUp} size=\"2x\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div id=\"break-block\" className=\"p-2 text-center\">\n          <div id=\"break-label\" className=\"alert alert-success\" role=\"alert\">\n            <div>Break:</div>\n            <div className=\"lead\">\n              <div className=\"badge badge-success\">\n                <span id=\"break-length\">{state.breakTime}</span> min\n              </div>\n            </div>\n            <div\n              className=\"btn-group mt-2\"\n              role=\"group\"\n              aria-label=\"set break length\"\n            >\n              <Button\n                id=\"break-decrement\"\n                className=\"btn btn-success\"\n                onClick={() => dispatch({ type: \"break-decrement\" })}\n              >\n                <FontAwesomeIcon icon={faCaretDown} size=\"2x\" />\n              </Button>\n              <Button\n                id=\"break-increment\"\n                className=\"btn btn-success\"\n                onClick={() => dispatch({ type: \"break-increment\" })}\n              >\n                <FontAwesomeIcon icon={faCaretUp} size=\"2x\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Timers;\n","// import { useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  console.log(state);\n  switch (action.type) {\n    case \"session-decrement\":\n      if (state.sessionTime > 0) {\n        if (state.started) {\n          return {\n            ...state,\n            sessionTime: state.sessionTime - 1,\n            clockTime: [state.clockTime[0] - 1, state.clockTime[1]],\n          };\n        } else {\n          return (\n            state.sessionTime > 0 && {\n              ...state,\n              sessionTime: state.sessionTime - 1,\n              clockTime: [state.sessionTime - 1, state.clockTime[1]],\n            }\n          );\n        }\n      } else {\n        return { ...state };\n      }\n    case \"session-increment\":\n      if (state.started) {\n        return {\n          ...state,\n          sessionTime: state.sessionTime + 1,\n          clockTime: [state.clockTime[0] + 1, state.clockTime[1]],\n        };\n      } else {\n        return {\n          ...state,\n          sessionTime: state.sessionTime + 1,\n          clockTime: [state.sessionTime + 1, state.clockTime[1]],\n        };\n      }\n    case \"break-decrement\":\n      if (state.breakTime > 0) {\n        console.log(\"-1 break\");\n        return { ...state, breakTime: state.breakTime - 1 };\n      } else {\n        console.log(\"zero break\");\n        return { ...state };\n      }\n    case \"break-increment\":\n      return { ...state, breakTime: state.breakTime + 1 };\n    case \"reset\":\n      return {\n        started: false,\n        sessionTime: 25,\n        breakTime: 5,\n        clockTime: [25, 0],\n        test: \"initial\",\n      };\n    case \"start-stop\":\n      if (state.started) {\n        console.log(\"stopping now 🛑\");\n        clearInterval();\n        return { ...state, started: false, test: \"Stopping\" };\n      } else {\n        console.log(\"starting now ⏲️\");\n        console.log(\"keeps going? \");\n        console.log(state);\n        return { ...state, started: true, test: \"starting\" };\n      }\n    case \"tic-toc\":\n      if (state.clockTime[1] === 0) {\n        console.log(`TOC ${state.clockTime[0]} : ${state.clockTime[1]}`);\n        return { ...state, clockTime: [state.clockTime[0] - 1, 59] };\n      } else {\n        console.log(`TOC ${state.clockTime[0]} : ${state.clockTime[1]}`);\n        return {\n          ...state,\n          clockTime: [state.clockTime[0], state.clockTime[1] - 1],\n        };\n      }\n    default:\n      throw new Error();\n  }\n}\n\nexport default reducer;\n","import React, { useReducer } from \"react\";\nimport pomodoro from \"./pomodoro.png\";\nimport \"./App.css\";\nimport Clock from \"./Clock\";\nimport Timers from \"./Timers\";\nimport reducer from \"./reducer\";\n\nexport default function App() {\n  const initialState = {\n    started: false,\n    sessionTime: 25,\n    breakTime: 5,\n    clockTime: [25, 0],\n    test: \"initial\",\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const Start = (state) => {\n    return state.started ? \"STARTED\" : \"Stopped\";\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"pomodoro\" className=\"d-flex justify-content-center my-2\">\n        <img id=\"pomodoro\" src={pomodoro} alt=\"Pomodoro\" />\n      </h1>\n      <Timers state={state} dispatch={dispatch} />\n      <Clock state={state} dispatch={dispatch} />\n      <p id=\"credits\">by LazaroFilm - last update Oct 15 6:02 PM</p>\n      <p>hello</p>\n      <p>{Start(state)}</p>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}